{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\ud83d\udcd8  DCaptcha API \u63a5\u5165\u6587\u6863","text":""},{"location":"#_1","title":"\ud83d\udd14 \u6559\u7a0b\u8bf4\u660e","text":"<p>\u6ce8\u610f\uff1a\u672c\u9875\u4e3a API \u63a5\u5165\u6559\u7a0b\uff0c\u975e\u540e\u53f0\u5b9e\u73b0\u6587\u6863\uff0c\u975e\u5f00\u53d1\u8005\u52ff\u7528\uff01</p>"},{"location":"#1","title":"1\ufe0f\u20e3 \u660e\u786e\u9a8c\u8bc1\u7801\u7c7b\u578b","text":"<p>\u9996\u5148\u8981\u660e\u786e\u9a8c\u8bc1\u7801\u7684\u7c7b\u578b, \u7136\u540e\u6839\u636e\u7c7b\u578b\u627e\u5230\u5bf9\u5e94\u7684 <code>imageId</code>, \u7c7b\u578b\u8868\u5982\u4e0b:</p> \u6765\u6e90 imageId \u7c7b\u578b\u8bf4\u660e \u6d88\u8017\u79ef\u5206 \u56fe\u7247\u793a\u4f8b 0 DX 2232501010 \u6ed1\u5757\u9a8c\u8bc1 10 1 DX 2232501020 \u6587\u5b57\u70b9\u9009 10 2 DX 2232501030 \u56fe\u6807\u70b9\u9009 10 3 DX 2232501040 \u6587\u5b57\u8bed\u5e8f 10 4 DX 2232501050 \u522e\u522e\u5361 10 5 DX 2232501060 \u7a7a\u95f4\u8bed\u4e49 10 6 DX 2232501070 \u4e71\u5e8f\u62fc\u56fe 10 7 DX 2232501080 \u65cb\u8f6c\u9a8c\u8bc1 10 8 DX 2232501090 \u9762\u79ef 10 9 DX 2232501100 \u5dee\u5f02\u70b9\u51fb 10 10 DX 2232501110 \u5b57\u4f53\u8bc6\u522b 10 11 DX 2232501120 \u6ed1\u52a8\u62fc\u56fe 10 12 GT 2702501010 \u6587\u5b57\u70b9\u9009 10 13 GT 2702501020 \u56fe\u6807\u70b9\u90092 10 14 GT 2702501030 \u56fe\u6807\u70b9\u90093 10 15 GT 2702501040 \u56fe\u6807\u70b9\u90094 10 16 GT 2702501041 \u56fe\u6807\u70b9\u90095 10 17 GT 2702501050 \u4e5d\u5bab\u683c 10 18 GT 2702501060 \u6d88\u6d88\u4e50 10 \u2705 \u76f4\u63a5\u4f20\u5165\u6570\u7ec4\u5373\u53ef 19 GT 2702501070 \u4e94\u5b50\u68cb 10 \u2705 \u76f4\u63a5\u4f20\u5165\u6570\u7ec4\u5373\u53ef 20 GT 2702501080 \u6587\u5b57\u91cd\u53e0\u70b9\u51fb 10 21 GT 2702501090 \u65b0\u4e5d\u5bab\u683c 10 22 GT 2702501100 \u6587\u5b57\u70b9\u9009(gt4) 10 23 GT 2702501110 \u6587\u5b57\u8bed\u5e8f(gt4) 10 24 YD 2802501010 \u6587\u5b57\u70b9\u9009 30"},{"location":"#2-token","title":"2\ufe0f\u20e3 \u83b7\u53d6 token","text":"<ul> <li>\u83b7\u53d6 token, \u53c2\u8003: token</li> </ul>"},{"location":"#3-api","title":"3\ufe0f\u20e3 API \u63a5\u53e3\u8be6\u89e3","text":""},{"location":"#_2","title":"\ud83d\udd17 \u8bf7\u6c42\u5730\u5740","text":"<pre><code>POST https://dcap.xiaocai.site/api/v1/yzm/images?imageId={imageId}\n</code></pre>"},{"location":"#query","title":"\ud83d\udccc Query \u53c2\u6570","text":"\u53c2\u6570\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u8bf4\u660e imageId int \u2705\u662f \u9a8c\u8bc1\u7801\u7c7b\u578b\u7684 ID"},{"location":"#headers","title":"\ud83e\uddfe \u8bf7\u6c42\u5934\uff08Headers\uff09","text":"\u53c2\u6570\u540d \u793a\u4f8b\u503c \u662f\u5426\u5fc5\u586b \u8bf4\u660e Authorization Bearer your_token \u2705 \u662f \u643a\u5e26\u8eab\u4efd\u9a8c\u8bc1 token Content-Type application/json \u2705 \u662f \u56fa\u5b9a\u503c Accept application/json \u2705 \u662f \u56fa\u5b9a\u503c"},{"location":"#payload","title":"\ud83d\udce4 \u8bf7\u6c42\u4f53\uff08Payload\uff09","text":"<p>\u26a0\ufe0f \u4e0d\u540c\u9a8c\u8bc1\u7801\u7c7b\u578b\u53c2\u6570\u7ed3\u6784\u4e0d\u540c. \u5177\u4f53\u8bf7\u53c2\u9605 dx \u548c gt\u4e2d\u7684\u53c2\u6570\uff0c\u4e0d\u5fc5\u5173\u6ce8\u5176\u4ed6\u4fe1\u606f\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a</p> \u5b57\u6bb5\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u8bf4\u660e bg string \u2705 \u662f \u80cc\u666f\u56fe base64 \u7f16\u7801\u5b57\u7b26\u4e32 ... - \u6309\u9700\u586b\u5145 \u5176\u4ed6\u5b57\u6bb5\u89c6\u7c7b\u578b\u800c\u5b9a"},{"location":"#json","title":"\ud83d\udce5 \u8fd4\u56de\u7ed3\u679c\uff08JSON\uff09","text":"\u53c2\u6570 \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u72b6\u6001\u7801\uff0c\u6210\u529f\u4e3a <code>200</code> msg string \u8fd4\u56de\u63d0\u793a\u4fe1\u606f success boolean \u662f\u5426\u8bc6\u522b\u6210\u529f\uff0c\u7a0b\u5e8f\u53ef\u53ea\u4f9d\u636e\u6b64\u5b57\u6bb5\u5224\u65ad\u662f\u5426\u6210\u529f data object \u8bc6\u522b\u7ed3\u679c\u5185\u5bb9\uff0c\u7ed3\u6784\u56e0\u9a8c\u8bc1\u7801\u7c7b\u578b\u800c\u5f02"},{"location":"#4-api","title":"4\ufe0f\u20e3 API \u8c03\u7528\u793a\u4f8b","text":""},{"location":"#1-dx","title":"\u2705 \u6848\u4f8b 1\uff1a\u8bc6\u522b DX \u9762\u79ef","text":"<pre><code>import base64\nimport requests\n\n##api \u63a5\u53e3\u5730\u5740(\u6d4b\u8bd5\u63a5\u53e3,  \u6ce8\u610f: \u8bf7\u6c42\u8def\u5f84\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684)\nAPI_URL = \"https://dcap.xiaocai.site/api/v1/yzm/images\" \n\n\nheaders = {\n    \"accept\": \"application/json\",\n    \"Authorization\": \"Bearer eyJhbGciOi************\",\n    \"Content-Type\": \"application/json\",\n}\n\n\n# 1. \u8bfb\u53d6\u56fe\u7247\u5e76\u8f6c\u6362\u4e3a base64 \u7f16\u7801\nbgfile = \"docs/example/dx_area.png\"\nwith open(bgfile, \"rb\") as f:\n    imgbase64 = base64.b64encode(f.read()).decode()\n\n# 2. \u51c6\u5907\u8bf7\u6c42\u7684 payload \u548c\u53c2\u6570, \u5177\u4f53\u7684\u53c2\u6570\u67e5\u770b\u76f8\u5173\u6587\u6863\npayload = {\"bg\": imgbase64}  \nparams = {\"imageId\": 2232501090} \n\n# 3. \u53d1\u9001 POST \u8bf7\u6c42\nresponse = requests.post(API_URL, params=params, json=payload, headers=headers)\nprint(\"\u8fd4\u56de\u7684\u7ed3\u679c:\", response.json())\n</code></pre> <pre><code>\u8fd4\u56de\u7684\u7ed3\u679c: {'code': 0, 'msg': '\u8bc6\u522b\u6210\u529f', 'success': True, 'data': '[85, 104]'}\n</code></pre>"},{"location":"#2-dx","title":"\u2705 \u6848\u4f8b 2\uff1a\u8bc6\u522b DX \u6587\u5b57\u70b9\u9009","text":"<pre><code>import base64\nimport requests\n\nAPI_URL = \"https://dcap.xiaocai.site/api/v1/yzm/images\" \n\n\nheaders = {\n    \"accept\": \"application/json\",\n    \"Authorization\": \"Bearer eyJhbGciOi************\",\n    \"Content-Type\": \"application/json\",\n}\n\nbgfile = \"docs/example/dx_click.png\"\nwith open(bgfile, \"rb\") as f:\n    imgbase64 = base64.b64encode(f.read()).decode()\n\npayload = {\"bg\": imgbase64, \"cw\": \"\u542c\u57cb\u6263\"}\nparams = {\"imageId\": 2232501020}\nresponse = requests.post(API_URL, params=params, json=payload, headers=headers)\nprint(\"\u8fd4\u56de\u7684\u7ed3\u679c:\", response.json())\n</code></pre> <pre><code>\u8fd4\u56de\u7684\u7ed3\u679c: {'code': 0, 'msg': '\u8bc6\u522b\u6210\u529f', 'success': True, 'data': '[[43, 44], [28, 106], [147, 62]]'}\n</code></pre>"},{"location":"#5","title":"5\ufe0f\u20e3 \u79ef\u5206\u67e5\u8be2\u63a5\u53e3","text":""},{"location":"#get","title":"\ud83d\udd17 \u8bf7\u6c42\u5730\u5740(\u6ce8\u610f\u4e3a get \u8bf7\u6c42)","text":"<pre><code>GET https://dcap.xiaocai.site/api/v1/self/info\n</code></pre>"},{"location":"#query_1","title":"\ud83d\udccc Query \u53c2\u6570","text":"<ul> <li>\u65e0</li> </ul>"},{"location":"#headers_1","title":"\ud83e\uddfe \u8bf7\u6c42\u5934(Headers)","text":"<ul> <li>\u4e0e\u8bc6\u522b\u63a5\u53e3\u76f8\u540c</li> </ul>"},{"location":"#json_1","title":"\ud83d\udce5 \u8fd4\u56de\u7ed3\u679c (JSON)","text":"<ul> <li>\u4e0e\u8bc6\u522b\u63a5\u53e3\u76f8\u540c</li> </ul>"},{"location":"dx/","title":"DX \u9a8c\u8bc1\u7801(\u5173\u6ce8\u53c2\u6570\u5373\u53ef)","text":"<p>\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd DX \u9a8c\u8bc1\u7801\u7c7b\u578b\u7684\u8bc6\u522b, \u53ea\u9700\u5173\u6ce8\u5404\u7c7b\u578b\u7684\u8f93\u5165\u53c2\u6570\u683c\u5f0f\u4e0e\u8bc6\u522b\u6548\u679c.</p> <p>\u6ce8\u610f\uff1a\u672c\u6a21\u5757\u4ec5\u63d0\u4f9b DX \u9a8c\u8bc1\u7801\u7684\u8bc6\u522b\u529f\u80fd.</p>"},{"location":"dx/#_1","title":"\u9762\u79ef\u9a8c\u8bc1","text":""},{"location":"dx/#dcaptcha.ctype.dx_area.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX Area \u9a8c\u8bc1\u7801,\u627e\u5230\u56fe\u50cf\u7684\u9762\u79ef\u533a\u57df\u6700\u5927\u7684\u4e2d\u5fc3\u70b9.</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u4e2d\u5fc3\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u4e2d\u5fc3\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[x, y]\"</li> <li>Optional[Image.Image]: \u53e0\u52a0\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_2","title":"\u6587\u5b57\u70b9\u9009","text":""},{"location":"dx/#dcaptcha.ctype.dx_click.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    cw: str,\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX Click \u9a8c\u8bc1\u7801,\u6839\u636e\u6587\u5b57\u5185\u5bb9\u627e\u5230\u70b9\u51fb\u70b9</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>cw</code> <code>str</code> <p>\u9a8c\u8bc1\u7801\u5185\u5bb9, \u5b57\u7b26\u4e32</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_3","title":"\u5dee\u5f02\u70b9\u51fb","text":""},{"location":"dx/#dcaptcha.ctype.dx_diff.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u5dee\u5f02\u70b9\u51fb \u9a8c\u8bc1\u7801,\u627e\u5230\u56fe\u50cf\u4e2d\u6700\u4e0d\u540c\u7684\u56fe\u7247\u7684\u4e2d\u5fc3\u70b9.</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u6700\u4e0d\u540c\u7684\u56fe\u7247\u4e2d\u5fc3\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u6700\u4e0d\u540c\u7684\u56fe\u7247\u4e2d\u5fc3\u5750\u6807,\u683c\u5f0f\u4e3a \"[x, y]\"</li> <li>Optional[Image.Image]: \u53e0\u52a0\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_4","title":"\u5b57\u4f53\u8bc6\u522b","text":""},{"location":"dx/#dcaptcha.ctype.dx_font.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u5b57\u4f53\u8bc6\u522b \u9a8c\u8bc1\u7801,\u627e\u5230\u56fe\u50cf\u4e2d\u4e0e\u5176\u4ed6\u5b57\u4f53\u4e0d\u540c\u7684\u5b57\u7b26\u7684\u5750\u6807.</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[x, y]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_5","title":"\u56fe\u6807\u70b9\u9009","text":""},{"location":"dx/#dcaptcha.ctype.dx_icon.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801DX \u56fe\u6807\u9a8c\u8bc1\u7801,\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[x, y]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_6","title":"\u8bed\u5e8f\u70b9\u9009","text":""},{"location":"dx/#dcaptcha.ctype.dx_phrase.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u8bed\u5e8f\u9a8c\u8bc1\u7801,\u6839\u636e\u56fe\u7247\u5185\u5bb9,\u81ea\u52a8\u68c0\u6d4b\u70b9\u51fb\u70b9</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_7","title":"\u6ed1\u52a8\u8fd8\u539f","text":""},{"location":"dx/#dcaptcha.ctype.dx_puzzle.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    split_y: int,\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u6ed1\u52a8\u8fd8\u539f \u9a8c\u8bc1\u7801, \u901a\u8fc7\u5206\u5272\u56fe\u50cf\u5e76\u5bfb\u627e\u6700\u4f73\u5e73\u79fb\u91cf\u6765\u5bf9\u9f50\u4e0a\u4e0b\u90e8\u5206\u3002</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282.</p> required <code>split_y</code> <code>int</code> <p>\u5206\u5272\u4f4d\u7f6e\u7684 y \u5750\u6807,\u7528\u4e8e\u5206\u5272\u4e0a\u4e0b\u56fe\u50cf(\u7531 dx \u7cfb\u7edf\u7ed9\u51fa).</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True.</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u5e73\u79fb\u7684\u8ddd\u79bb\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u6700\u4f18\u5e73\u79fb\u91cf</li> <li>Optional[Image.Image]: \u663e\u793a\u5bf9\u9f50\u6548\u679c\u56fe,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_8","title":"\u65cb\u8f6c\u9a8c\u8bc1","text":""},{"location":"dx/#dcaptcha.ctype.dx_rotate.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Union[str, Path, Image, ndarray, bytes],\n    method: str = \"1\",\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u65cb\u8f6c\u9a8c\u8bc1\u7801,\u627e\u5230\u6700\u4f73\u65cb\u8f6c\u89d2\u5ea6\u5e76\u8fd4\u56de\u53e0\u52a0\u56fe\u50cf\u3002</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>fg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u524d\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>method</code> <code>str</code> <p>\u54c8\u5e0c\u65b9\u6cd5, 1 \u4ee3\u8868\u4f7f\u7528 imagehash.phash, 2\u4ee3\u8868\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 phash\u3002\u9ed8\u8ba4\u4e3a \"1\"\u3002</p> <code>'1'</code> <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u6700\u4f73\u65cb\u8f6c\u89d2\u5ea6\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u6700\u4f73\u65cb\u8f6c\u89d2\u5ea6</li> <li>Optional[Image.Image]: \u53e0\u52a0\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_9","title":"\u522e\u522e\u5361\u9a8c\u8bc1","text":""},{"location":"dx/#dcaptcha.ctype.dx_scratch.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u8bc6\u522b\u522e\u522e\u5361\u9a8c\u8bc1\u7801</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u8bc6\u522b\u7ed3\u679c\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u8bc6\u522b\u7ed3\u679c,\u683c\u5f0f\u4e3a \"[x1, y1, x2, y2]\" ,\u7269\u4f53\u7684\u8fb9\u754c\u6846\u5750\u6807,  x1, y1 \u662f\u5de6\u4e0a\u89d2\u5750\u6807, x2, y2 \u662f\u53f3\u4e0b\u89d2\u5750\u6807</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_10","title":"\u4e71\u5e8f\u62fc\u56fe","text":""},{"location":"dx/#dcaptcha.ctype.dx_shuffle.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u8bc6\u522b DX \u4e71\u5e8f\u62fc\u56fe\u9a8c\u8bc1\u7801, \u8fd4\u56de\u9700\u8981\u4ea4\u6362\u7684\u7d22\u5f15\u5bf9(\u884c\u4f18\u5148\u5e8f)\u4ee5\u53ca\u91cd\u5efa\u540e\u7684\u56fe\u50cf\u3002</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u8bc6\u522b\u7ed3\u679c\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u9700\u8981\u4ea4\u6362\u7684\u7d22\u5f15\u5bf9,\u683c\u5f0f\u4e3a \"[(i1, j1), (i2, j2)]\", \u884c\u4f18\u5148\u5e8f</li> <li>Optional[Image.Image]: \u91cd\u5efa\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_11","title":"\u6ed1\u5757\u9a8c\u8bc1","text":""},{"location":"dx/#dcaptcha.ctype.dx_slide.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n    method: str = \"3\",\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u6ed1\u5757\u9a8c\u8bc1\u7801,\u8fd4\u56de\u6ed1\u5757\u4f4d\u7f6e\u5e76\u5728\u80cc\u666f\u56fe\u4e0a\u753b\u51fa\u6ed1\u5757\u4f4d\u7f6e</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <code>method</code> <code>str</code> <p>\u6ed1\u5757\u4f4d\u7f6e\u8ba1\u7b97\u65b9\u6cd5,\u9ed8\u8ba4\u4e3a \"3\",\u53ef\u9009 \"1\" (SlideCrack), \"2\" (ddddocr), \"3\" (SlideMatcher)</p> <code>'3'</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u6ed1\u5757\u4f4d\u7f6e\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u6ed1\u5757\u4f4d\u7f6e,\u683c\u5f0f\u4e3a \"[x1, y1, x2, y2]\", x1, y1 \u662f\u5de6\u4e0a\u89d2\u5750\u6807, x2, y2 \u662f\u53f3\u4e0b\u89d2\u5750\u6807</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"dx/#_12","title":"\u7a7a\u95f4\u8bed\u4e49","text":""},{"location":"dx/#dcaptcha.ctype.dx_spatial.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    verifyType: Union[int, str],\n    childVerifyType: Union[int, str],\n    color: Optional[str] = None,\n    imgName: Optional[str] = None,\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u7a7a\u95f4\u8bed\u4e49\u9a8c\u8bc1\u7801,\u8fd4\u56de\u7269\u4f53\u7684\u4e2d\u5fc3\u70b9\u5750\u6807\u5e76\u5728\u80cc\u666f\u56fe\u4e0a\u753b\u51fa\u7269\u4f53\u4f4d\u7f6e</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>verifyType</code> <code>Union[int, str]</code> <p>\u9a8c\u8bc1\u7c7b\u578b,\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b57\u7b26\u4e32, \u8fd9\u4e9b\u503c\u7531 dx \u7cfb\u7edf\u7ed9\u51fa</p> required <code>childVerifyType</code> <code>Union[int, str]</code> <p>\u5b50\u9a8c\u8bc1\u7c7b\u578b,\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b57\u7b26\u4e32, \u8fd9\u4e9b\u503c\u7531 dx \u7cfb\u7edf\u7ed9\u51fa</p> required <code>color</code> <code>Optional[str]</code> <p>\u989c\u8272,\u4ec5\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\u624d\u9700\u8981,\u5982 verifyType=1 \u65f6, \u8fd9\u4e9b\u503c\u7531 dx \u7cfb\u7edf\u7ed9\u51fa</p> <code>None</code> <code>imgName</code> <code>Optional[str]</code> <p>\u7269\u4f53\u540d\u79f0,\u4ec5\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\u624d\u9700\u8981,\u5982 verifyType=1 \u65f6, \u8fd9\u4e9b\u503c\u7531 dx \u7cfb\u7edf\u7ed9\u51fa</p> <code>None</code> <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3a True,\u5982\u679c\u4e3a False,\u5219\u53ea\u8fd4\u56de\u4e2d\u5fc3\u70b9\u5750\u6807</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u7269\u4f53\u7684\u4e2d\u5fc3\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u7269\u4f53\u7684\u4e2d\u5fc3\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[x, y]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/","title":"GT\u9a8c\u8bc1\u7801(\u5173\u6ce8\u53c2\u6570\u5373\u53ef)","text":"<p>\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd Geetest \u9a8c\u8bc1\u7801\u7c7b\u578b\u7684\u8bc6\u522b, \u53ea\u9700\u5173\u6ce8\u5404\u7c7b\u578b\u7684\u8f93\u5165\u53c2\u6570\u683c\u5f0f\u4e0e\u8bc6\u522b\u6548\u679c.</p> <p>\u6ce8\u610f\uff1a\u672c\u6a21\u5757\u4ec5\u63d0\u4f9b Geetest \u9a8c\u8bc1\u7801\u7684\u8bc6\u522b\u529f\u80fd.</p>"},{"location":"gt/#_1","title":"\u6587\u5b57\u70b9\u9009","text":""},{"location":"gt/#dcaptcha.ctype.gt_click.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 geetest3 \u6587\u5b57\u70b9\u51fb\u9a8c\u8bc1\u7801, \u6839\u636e\u56fe\u7247\u5185\u5bb9,\u81ea\u52a8\u68c0\u6d4b\u70b9\u51fb\u70b9</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#2","title":"\u56fe\u6807\u70b9\u90092","text":""},{"location":"gt/#dcaptcha.ctype.gt_icon2bitebi.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 icon \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247(icon\u7c7b\u578b2)</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#3","title":"\u56fe\u6807\u70b9\u90093","text":""},{"location":"gt/#dcaptcha.ctype.gt_icon3gw.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 icon \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247 (icon\u7c7b\u578b3)</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#4","title":"\u56fe\u6807\u70b9\u90094","text":""},{"location":"gt/#dcaptcha.ctype.gt_icon4mihoyo.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 icon \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247 (icon\u7c7b\u578b4)</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#5","title":"\u56fe\u6807\u70b9\u90095","text":""},{"location":"gt/#dcaptcha.ctype.gt_icon5gw.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 icon \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247(icon\u7c7b\u578b2)</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u6309\u987a\u5e8f\u7684\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#_2","title":"\u4e5d\u5bab\u683c","text":"<p>\u4e5d\u5bab\u683c\u56fe\u7247\u4e2d\u70b9\u51fb\u7b26\u5408\u6761\u4ef6\u7684\u683c\u5b50</p> <p></p>"},{"location":"gt/#dcaptcha.ctype.gt_nine.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Union[str, Path, Image, ndarray, bytes],\n    method: str = \"1\",\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 geetest4 nine \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u56fe\u6807)</p> required <code>method</code> <code>str</code> <p>\u5339\u914d\u65b9\u6cd5, \u9ed8\u8ba4\u4e3a \"1\",\u53ef\u9009 \"1\" (\u7cbe\u786e\u5339\u914d), \"2\" (\u76f8\u4f3c\u5ea6\u5339\u914d)</p> <code>'1'</code> <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#_3","title":"\u6d88\u6d88\u4e50","text":"<p>\u901a\u8fc7\u56fe\u50cf\u5206\u6790\u5224\u65ad\u53ef\u6d88\u9664\u533a\u57df</p> <p></p>"},{"location":"gt/#dcaptcha.ctype.gt_match.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    array: list[list[int]],\n) -&gt; Optional[list[tuple[int, int]]]\n</code></pre> <p>\u89e3\u7801 geetest4 \u6d88\u6d88\u4e50\u9a8c\u8bc1\u7801,\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u683c\u5b50,\u4f7f\u5f97\u67d0\u4e00\u884c\u6216\u67d0\u4e00\u5217\u5f62\u6210\u4e09\u4e2a\u76f8\u540c\u6570\u5b57\u7684\u7ebf</p> <p>Parameters:</p> Name Type Description Default <code>array</code> <code>list[list[int]]</code> <p>3x3 \u6570\u5b57\u77e9\u9635,\u6bcf\u4e2a\u5143\u7d20\u4e3a 0-9 \u7684\u6574\u6570</p> required <p>Returns:</p> Type Description <code>Optional[list[tuple[int, int]]]</code> <p>\u8fd4\u56de\u4ea4\u6362\u7684\u4e24\u4e2a\u5750\u6807,\u5982\u679c\u65e0\u6cd5\u5f62\u6210\u7ebf\u5219\u8fd4\u56de None</p> <ul> <li>list[tuple[int, int]]: \u4ea4\u6362\u7684\u4e24\u4e2a\u5750\u6807,\u683c\u5f0f\u4e3a [(x1, y1), (x2, y2)], x1, y1 \u662f\u7b2c\u4e00\u4e2a\u683c\u5b50\u7684\u5750\u6807, x2, y2 \u662f\u7b2c\u4e8c\u4e2a\u683c\u5b50\u7684\u5750\u6807,(\u884c\u4f18\u5148)</li> <li>None: \u5982\u679c\u65e0\u6cd5\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u683c\u5b50\u5f62\u6210\u7ebf,\u5219\u8fd4\u56de None</li> </ul>"},{"location":"gt/#_4","title":"\u4e94\u5b50\u68cb","text":"<p>\u4e94\u5b50\u68cb\u7c7b\u89c4\u5219\u5224\u65ad\uff0c\u70b9\u51fb\u843d\u5b50\u70b9</p> <p></p>"},{"location":"gt/#dcaptcha.ctype.gt_winlinze.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    array: List[List[int]],\n) -&gt; Optional[List[Tuple[int, int]]]\n</code></pre> <p>\u89e3\u7801 geetest4 \u4e94\u5b50\u68cb \u9a8c\u8bc1\u7801\uff0c\u627e\u5230\u4e00\u6b21\u4ea4\u6362\u53ef\u4ee5\u5f62\u6210\u4e94\u5b50\u8fde\u7ebf\u7684\u5750\u6807\u3002</p> <p>Parameters:</p> Name Type Description Default <code>array</code> <code>List[List[int]]</code> <p>5x5 \u6570\u5b57\u77e9\u9635,\u6bcf\u4e2a\u5143\u7d20\u4e3a 0-9 \u7684\u6574\u6570</p> required <p>Returns:</p> Type Description <code>Optional[List[Tuple[int, int]]]</code> <p>\u8fd4\u56de\u4ea4\u6362\u7684\u4e24\u4e2a\u5750\u6807,\u5982\u679c\u65e0\u6cd5\u5f62\u6210\u7ebf\u5219\u8fd4\u56de None</p> <ul> <li>list[tuple[int, int]]: \u4ea4\u6362\u7684\u4e24\u4e2a\u5750\u6807,\u683c\u5f0f\u4e3a [(x1, y1), (x2, y2)], x1, y1 \u662f\u7b2c\u4e00\u4e2a\u683c\u5b50\u7684\u5750\u6807, x2, y2 \u662f\u7b2c\u4e8c\u4e2a\u683c\u5b50\u7684\u5750\u6807,(\u884c\u4f18\u5148)</li> <li>None: \u5982\u679c\u65e0\u6cd5\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u683c\u5b50\u5f62\u6210\u7ebf,\u5219\u8fd4\u56de None</li> </ul>"},{"location":"gt/#_5","title":"\u6587\u5b57\u91cd\u53e0","text":""},{"location":"gt/#dcaptcha.ctype.gt_double.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 geetest4 \u6587\u5b57\u91cd\u53e0\u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Name Type Description <code>tuple</code> <code>tuple[str, Optional[Image]]</code> <p>\u5305\u542b\u70b9\u51fb\u70b9\u5750\u6807\u5b57\u7b26\u4e32\u548c\u7ed3\u679c\u56fe\u50cf(\u5982\u679c show \u4e3a True, \u5426\u5219\u4e3a None)</p>"},{"location":"gt/#_6","title":"\u65b0\u4e5d\u5bab\u683c","text":""},{"location":"gt/#dcaptcha.ctype.gt_nine4new.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Union[str, Path, Image, ndarray, bytes],\n    method: str = \"1\",\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 geetest4 new nine \u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u56fe\u6807)</p> required <code>method</code> <code>str</code> <p>\u5339\u914d\u65b9\u6cd5, \u9ed8\u8ba4\u4e3a \"1\",\u53ef\u9009 \"1\" (\u7cbe\u786e\u5339\u914d), \"2\" (\u76f8\u4f3c\u5ea6\u5339\u914d)</p> <code>'1'</code> <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"gt/#_7","title":"\u6587\u5b57\u70b9\u9009","text":""},{"location":"gt/#dcaptcha.ctype.gt_word4.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    fg: Sequence[Union[str, Path, Image, ndarray, bytes]],\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 geetest4 \u6587\u5b57\u91cd\u53e0\u9a8c\u8bc1\u7801, \u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u7247</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u5e95\u56fe)</p> required <code>fg</code> <code>Sequence[Union[str, Path, Image, ndarray, bytes]]</code> <p>\u524d\u666f\u56fe\u7247\u8def\u5f84\u6216PIL\u56fe\u50cf\u5bf9\u8c61 (\u56fe\u6807)</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u7247,\u9ed8\u8ba4\u4e3aTrue</p> <code>True</code> <p>Returns:</p> Name Type Description <code>tuple</code> <code>tuple[str, Optional[Image]]</code> <p>\u5305\u542b\u70b9\u51fb\u70b9\u5750\u6807\u5b57\u7b26\u4e32\u548c\u7ed3\u679c\u56fe\u50cf(\u5982\u679c show \u4e3a True, \u5426\u5219\u4e3a None)</p>"},{"location":"gt/#_8","title":"\u6587\u5b57\u8bed\u5e8f","text":""},{"location":"gt/#dcaptcha.ctype.gt_word4phrase.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    method: Literal[\"1\", \"2\"] = \"1\",\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 DX \u8bed\u5e8f\u9a8c\u8bc1\u7801,\u6839\u636e\u56fe\u7247\u5185\u5bb9,\u81ea\u52a8\u68c0\u6d4b\u70b9\u51fb\u70b9</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>method</code> <code>Literal['1', '2']</code> <p>\u5904\u7406\u65b9\u6cd5,\u9ed8\u8ba4\u4e3a \"1\".</p> <ul> <li>\"1\": \u6a21\u578b 1</li> <li>\"2\": \u6a21\u578b 2</li> </ul> <code>'1'</code> <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"},{"location":"token/","title":"token","text":""},{"location":"token/#api","title":"API \u514d\u8d39\u4f7f\u7528","text":"<p>\u6bcf\u4e2a token \u6bcf\u5929\u53ef\u4ee5\u514d\u8d39\u6d4b\u8bd5 50 \u6b21\u9a8c\u8bc1\u7801\u8bc6\u522b, </p> <pre><code>'ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SjFjMlZ5Ym1GdFpTSTZJblYwZVhWek5EaG9lR3NpTENKcGFXUWlPak1zSW1WNGNDSTZNalEzTlRVME9ERXdPQ3dpZFdsa0lqb2lOWFpZTURSR1RXNU1kQ0lzSW5SNWNHVWlPaUpoY0dsZllXTmpaWE56SWl3aWFXRjBJam94TnpVMU5UUTRNVEE0TENKMWMyVnlkSGx3WlNJNk1uMC5pTmN0b0tDYVd6WjRNNFZxOHF3NGtpdFh4azljU0Y1dXd4LUVtOWdxbjNr'\n</code></pre>"},{"location":"token/#_1","title":"\u767b\u5f55\u6ce8\u518c","text":"<ul> <li>\u767b\u5f55\u6ce8\u518c\u8bf7\u8bbf\u95ee https://dcap.xiaocai.site</li> </ul>"},{"location":"token/#_2","title":"\u6709\u95ee\u9898\u6216\u5efa\u8bae","text":"<p>\u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\u6216\u5efa\u8bae\uff0c\u8bf7\u5728 GitHub Issues \u63d0\u4ea4</p>"},{"location":"yd/","title":"YD \u9a8c\u8bc1\u7801(\u5173\u6ce8\u53c2\u6570\u5373\u53ef)","text":"<p>\u672c\u6a21\u5757\u652f\u6301\u591a\u79cd YiDun \u9a8c\u8bc1\u7801\u7c7b\u578b\u7684\u8bc6\u522b, \u53ea\u9700\u5173\u6ce8\u5404\u7c7b\u578b\u7684\u8f93\u5165\u53c2\u6570\u683c\u5f0f\u4e0e\u8bc6\u522b\u6548\u679c.</p> <p>\u6ce8\u610f\uff1a\u672c\u6a21\u5757\u4ec5\u63d0\u4f9b YiDun \u9a8c\u8bc1\u7801\u7684\u8bc6\u522b\u529f\u80fd.</p>"},{"location":"yd/#_1","title":"\u6587\u5b57\u70b9\u9009","text":""},{"location":"yd/#dcaptcha.ctype.yd_word.main.decode_captcha","title":"decode_captcha","text":"<pre><code>decode_captcha(\n    bg: Union[str, Path, Image, ndarray, bytes],\n    cw: str,\n    show: bool = True,\n) -&gt; tuple[str, Optional[Image.Image]]\n</code></pre> <p>\u89e3\u7801 YD word \u9a8c\u8bc1\u7801, \u6839\u636e\u6587\u5b57\u5185\u5bb9\u627e\u5230\u70b9\u51fb\u70b9</p> <p>Parameters:</p> Name Type Description Default <code>bg</code> <code>Union[str, Path, Image, ndarray, bytes]</code> <p>\u80cc\u666f\u56fe,\u53ef\u4ee5\u662f\u8def\u5f84\u3001PIL\u5bf9\u8c61\u3001OpenCV\u56fe\u50cf\u6216\u539f\u59cb\u5b57\u8282\u3002</p> required <code>cw</code> <code>str</code> <p>\u9a8c\u8bc1\u7801\u5185\u5bb9, \u5b57\u7b26\u4e32</p> required <code>show</code> <code>bool</code> <p>\u662f\u5426\u8fd4\u56de\u53ef\u89c6\u5316\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e3a True\u3002</p> <code>True</code> <p>Returns:</p> Type Description <code>tuple[str, Optional[Image]]</code> <p>\u8fd4\u56de\u70b9\u51fb\u70b9\u5750\u6807\u548c\u5904\u7406\u540e\u7684\u56fe\u50cf</p> <ul> <li>str: \u70b9\u51fb\u70b9\u5750\u6807,\u683c\u5f0f\u4e3a \"[[x1, y1], [x2, y2], ...]\"</li> <li>Optional[Image.Image]: \u5904\u7406\u540e\u7684\u56fe\u50cf,\u4ec5\u5f53 show=True \u65f6\u8fd4\u56de</li> </ul>"}]}